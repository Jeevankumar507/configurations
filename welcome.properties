Trading Company Service → /api/companies

Operation	URI	Method	Status Codes

Create company	/api/companies	POST	201 Created, 400 Bad Request, 409 Conflict
Get company by ID	/api/companies/{id}	GET	200 OK, 404 Not Found
List companies	/api/companies	GET	200 OK
Update company	/api/companies/{id}	PUT	200 OK, 400 Bad Request, 404 Not Found
Delete company	/api/companies/{id}	DELETE	204 No Content, 404 Not Found



---

2️⃣ Trader Service → /api/traders

Operation	URI	Method	Status Codes

Create trader	/api/traders	POST	201 Created, 400 Bad Request, 409 Conflict
Get trader by ID	/api/traders/{id}	GET	200 OK, 404 Not Found
List traders by company	/api/traders?companyId={id}	GET	200 OK
Update trader	/api/traders/{id}	PUT	200 OK, 400 Bad Request, 404 Not Found
Delete trader	/api/traders/{id}	DELETE	204 No Content, 404 Not Found



---

3️⃣ Trade Orders Service → /api/orders

Operation	URI	Method	Status Codes

Place order	/api/orders	POST	201 Created, 400 Bad Request, 404 Not Found (invalid trader/asset)
Get order by ID	/api/orders/{id}	GET	200 OK, 404 Not Found
List orders by trader/status	/api/orders?traderId={id}&status=OPEN	GET	200 OK
Update order	/api/orders/{id}	PUT	200 OK, 400 Bad Request, 404 Not Found
Cancel order	/api/orders/{id}	DELETE	204 No Content, 404 Not Found, 409 Conflict (if not OPEN)



---

4️⃣ Asset Service → /api/assets

Operation	URI	Method	Status Codes

Add asset	/api/assets	POST	201 Created, 400 Bad Request, 409 Conflict
Get asset by ID	/api/assets/{id}	GET	200 OK, 404 Not Found
List assets	/api/assets?symbol=ABC&type=STOCK	GET	200 OK
Update asset	/api/assets/{id}	PUT	200 OK, 400 Bad Request, 404 Not Found
Delete asset	/api/assets/{id}	DELETE	204 No Content, 404 Not Found



---

5️⃣ Settlement Service → /api/settlements

Operation	URI	Method	Status Codes

Record settlement	/api/settlements	POST	201 Created, 400 Bad Request, 404 Not Found (invalid order), 409 Conflict
Get settlement by ID	/api/settlements/{id}	GET	200 OK, 404 Not Found
List settlements	/api/settlements?orderId={id}&status=SETTLED	GET	200 OK
Update settlement	/api/settlements/{id}	PUT	200 OK, 400 Bad Request, 404 Not Found
Cancel/void settlement	/api/settlements/{id}	DELETE	204 No Content, 404 Not Found, 409 Conflict



---
Microservices Included
1. Trading Company Service
Manages trading company details and operations.
DB Schema: trading_companies
•	id (BIGINT, PK, AUTO_INCREMENT)
•	name (VARCHAR(150), NOT NULL)
•	license_number (VARCHAR(100), NOT NULL)
•	contact_email (VARCHAR(100), NOT NULL)
•	address (VARCHAR(250), NOT NULL)
•	created_at (TIMESTAMP, NOT NULL)
Sample JSON:
{
"name": "Global Trade Corp",
"licenseNumber": "TRD-56789",
"contactEmail": "info@globaltrade.com",
"address": "150 Market Street, Singapore",
"createdAt": "2025-07-28T09:00:00"
}
2. Trader Service
Handles trader profile management, including CRUD, field validations, and data integrity.
DB Schema: traders
•	id (BIGINT, PK, AUTO_INCREMENT)
•	trading_company_id (BIGINT, FK)
•	first_name (VARCHAR(100), NOT NULL)
•	last_name (VARCHAR(100), NOT NULL)
•	email (VARCHAR(100), NOT NULL)
•	phone (VARCHAR(20), NOT NULL)
•	created_at (TIMESTAMP, NOT NULL)
Sample JSON:
{
"tradingCompanyId": 101,
"firstName": "Jordan",
"lastName": "Lee",
"email": "jordan.lee@globaltrade.com",
"phone": "+65 91234567",
"createdAt": "2025-07-28T09:30:00"
}
3. Trade Orders Service
Manages trade orders, including placements, updates, and cancellations.
DB Schema: trade_orders
•	id (BIGINT, PK, AUTO_INCREMENT)
•	trader_id (BIGINT, FK)
•	asset_id (BIGINT, FK)
•	order_type (VARCHAR(50), NOT NULL)
•	quantity (DECIMAL(12,2), NOT NULL)
•	price (DECIMAL(10,2), NOT NULL)
•	status (VARCHAR(50), NOT NULL)
•	created_at (TIMESTAMP, NOT NULL)
Sample JSON:
{
"traderId": 215,
"assetId": 3010,
"orderType": "BUY",
"quantity": 500,
"price": 250.75,
"status": "OPEN",
"createdAt": "2025-07-28T10:00:00"
}
4. Asset Service
Catalogs available assets and their details.
DB Schema: assets
•	id (BIGINT, PK, AUTO_INCREMENT)
•	name (VARCHAR(150), NOT NULL)
•	symbol (VARCHAR(20), NOT NULL)
•	type (VARCHAR(50), NOT NULL)
•	current_price (DECIMAL(10,2), NOT NULL)
•	listed_since (DATE, NOT NULL)
Sample JSON:
{
"name": "ABC Corporation",
"symbol": "ABC",
"type": "STOCK",
"currentPrice": 250.75,
"listedSince": "2020-01-15"
}
5. Settlement Service
Processes settlements and maintains records for trade orders.
DB Schema: settlements
•	id (BIGINT, PK, AUTO_INCREMENT)
•	trade_order_id (BIGINT, FK)
•	settlement_date (TIMESTAMP, NOT NULL)
•	amount (DECIMAL(10,2), NOT NULL)
•	status (VARCHAR(50), NOT NULL)
•	payment_reference (VARCHAR(100), NOT NULL)
Sample JSON:
{
"tradeOrderId": 5002,
"settlementDate": "2025-07-28T11:00:00",
"amount": 125375.00,
"status": "SETTLED",
"paymentReference": "SETTLE-20250728-001"
}




https://chatgpt.com/share/68b6991a-7720-8002-8629-5af153a62f8d
